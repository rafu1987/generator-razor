# ------------------------------------------------------------------------------
# | Local development (Docker)                                                 |
# ------------------------------------------------------------------------------

<FilesMatch \.php$>
  SetHandler proxy:fcgi://php81:9000
</FilesMatch>

# ------------------------------------------------------------------------------
# | Local development (MAMP)                                                   |
# ------------------------------------------------------------------------------

# <IfModule mod_mime.c>
#   RemoveHandler .php
#   RemoveType .php
#   <FilesMatch ".+\.php$">
#     AddHandler php-fastcgi .php
#   </FilesMatch>
# </IfModule>

# ------------------------------------------------------------------------------
# | TYPO3 application context                                                  |
# ------------------------------------------------------------------------------

# SetEnv TYPO3_CONTEXT Development

# ------------------------------------------------------------------------------
# | Maintenance mode                                                           |
# ------------------------------------------------------------------------------

# <IfModule mod_rewrite.c>
#   RewriteEngine on
#   RewriteCond %{REMOTE_HOST} !^111\.222\.333\.444
#   RewriteCond %{HTTP:X-FORWARDED-FOR} !^111\.222\.333\.444
#   RewriteCond %{REQUEST_URI} !/maintenance.html$ [NC]
#   RewriteCond %{REQUEST_URI} !\.(jpe?g?|png|gif) [NC]
#   # RewriteRule (IP) /x%{HTTP:X-FORWARDED-FOR}x [R,L]
#   RewriteRule .* /maintenance.html [R=302,L]
# </IfModule>

# ------------------------------------------------------------------------------
# | Browserupdate                                                              |
# ------------------------------------------------------------------------------

RewriteCond %{HTTP_USER_AGENT} "Mozilla.*Gecko.*Firefox/([1-9]|[1-2][0-9])[^0-9]" [NC,OR]
RewriteCond %{HTTP_USER_AGENT} "^Firefox[\/\s]([1-9]|[1-2][0-9])[^0-9]" [NC,OR]
RewriteCond %{HTTP_USER_AGENT} "AppleWebKit.*Version\/[1-8]\.[0-9\.]*\ Safari" [NC,OR]
RewriteCond %{HTTP_USER_AGENT} "AppleWebKit.*Version\/[1-8]\.[0-9\.]*\ Mobile\/[A-z0-9]+\ Safari" [NC,OR]
RewriteCond %{HTTP_USER_AGENT} (MSIE|Trident) [NC]
RewriteRule .* browser-support.html [L]

# ----------------------------------------------------------------------
# | Keep alive                                                         |
# ----------------------------------------------------------------------

<IfModule mod_headers.c>
  Header set Connection keep-alive
</IfModule>

# ----------------------------------------------------------------------
# | Vary                                                               |
# ----------------------------------------------------------------------

<IfModule mod_headers.c>
  <FilesMatch ".(js|css|xml|gz|html)$">
    Header append Vary: Accept-Encoding
  </FilesMatch>
</IfModule>

# ----------------------------------------------------------------------
# | Enforce trailing slash. Ignore trailing slash on file endings      |
# ----------------------------------------------------------------------

# <IfModule mod_rewrite.c>
#   RewriteBase /
#   RewriteCond %{REQUEST_FILENAME} !-f
#   RewriteCond %{REQUEST_FILENAME} !-d
#   RewriteCond %{REQUEST_URI} !(.*)/$
#   RewriteCond %{REQUEST_FILENAME} !\.(gif|jpg|png|jpeg|css|js|xml|rss|json|txt|yaml|yml)$ [NC]
#   RewriteCond %{REQUEST_URI} !\.(gif|jpg|png|jpeg|css|js|xml|rss|json|txt|yaml|yml)$ [NC]
#   RewriteRule ^(.*[^/])$ /$1/ [L,R=301]
# </IfModule>

# ----------------------------------------------------------------------
# | webp support                                                       |
# ----------------------------------------------------------------------

# <IfModule mod_rewrite.c>
#   RewriteEngine On
#   RewriteCond %{HTTP_ACCEPT} image/webp
#   RewriteCond %{DOCUMENT_ROOT}/$1.$3.webp -f
#   RewriteRule ^((fileadmin|other-storage)/.+)\.(png|jpg|jpeg)$ $1.$3.webp [L]
# </IfModule>

# <IfModule mod_headers.c>
#   Header append Vary Accept env=REDIRECT_accept
# </IfModule>

# ----------------------------------------------------------------------
# | Forcing the `www.` at the beginning of URLs                        |
# ----------------------------------------------------------------------

# RewriteCond %{HTTP_HOST} ^mywebsite\.com$ [NC]
# RewriteRule ^(.*)$ http://www\.mywebsite\.com/$1 [R=301,L]

# ----------------------------------------------------------------------
# | No `www.` at the beginning of URLs                                 |
# ----------------------------------------------------------------------

# RewriteCond %{HTTP_HOST} ^www.subdomain\.mywebsite\.com [NC]
# RewriteRule ^(.*)$ http://subdomain\.mywebsite\.com/$1 [R=301,L]

# ----------------------------------------------------------------------
# | Forcing `https://`                                                 |
# ----------------------------------------------------------------------

# Redirect from the `http://` to the `https://` version of the URL.
# https://wiki.apache.org/httpd/RewriteHTTPToHTTPS

<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP:X-Forwarded-Proto} !https [NC]
  RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]
</IfModule>

# ----------------------------------------------------------------------
# | TYPO3                                                              |
# ----------------------------------------------------------------------

#####
#
# Example .htaccess file for TYPO3 CMS - for use with Apache Webserver
#
# This file includes settings for the following configuration options:
#
# - Compression
# - Caching
# - MIME types
# - Cross Origin requests
# - Rewriting and Access
# - Miscellaneous
# - PHP optimisation
#
# If you want to use it, you have to copy it to the root folder of your TYPO3 installation (if its
# not there already) and rename it to '.htaccess'. To make .htaccess files work, you might need to
# adjust the 'AllowOverride' directive in your Apache configuration file.
#
# IMPORTANT: You may need to change this file depending on your TYPO3 installation!
#            Consider adding this file's content to your webserver's configuration directly for speed improvement
#
# Lots of the options are taken from https://github.com/h5bp/html5-boilerplate/blob/master/dist/.htaccess
#
####


### Begin: Compression ###

# Compressing resource files will save bandwidth and so improve loading speed especially for users
# with slower internet connections. TYPO3 can compress the .js and .css files for you.
# *) Uncomment the following lines and
# *) Set $GLOBALS['TYPO3_CONF_VARS']['BE']['compressionLevel'] = 9 for the Backend
# *) Set $GLOBALS['TYPO3_CONF_VARS']['FE']['compressionLevel'] = 9 together with the TypoScript properties
#    config.compressJs and config.compressCss for GZIP compression of Frontend JS and CSS files.

<FilesMatch "\.js\.gzip$">
  AddType "text/javascript" .gzip
</FilesMatch>
<FilesMatch "\.css\.gzip$">
  AddType "text/css" .gzip
</FilesMatch>
AddEncoding gzip .gzip

<IfModule mod_deflate.c>
  # Force compression for mangled `Accept-Encoding` request headers
  <IfModule mod_setenvif.c>
    <IfModule mod_headers.c>
      SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
      RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
    </IfModule>
  </IfModule>

  # Compress all output labeled with one of the following media types.
  #
  # (!) For Apache versions below version 2.3.7 you don't need to
  # enable `mod_filter` and can remove the `<IfModule mod_filter.c>`
  # and `</IfModule>` lines as `AddOutputFilterByType` is still in
  # the core directives.
  #
  # https://httpd.apache.org/docs/current/mod/mod_filter.html#addoutputfilterbytype

  <IfModule mod_filter.c>
    AddOutputFilterByType DEFLATE application/atom+xml \
      application/javascript \
      application/json \
      application/ld+json \
      application/manifest+json \
      application/rdf+xml \
      application/rss+xml \
      application/schema+json \
      application/vnd.geo+json \
      application/geo+json \
      application/vnd.ms-fontobject \
      application/x-font-ttf \
      application/x-javascript \
      application/x-web-app-manifest+json \
      application/xhtml+xml \
      application/xml \
      font/eot \
      font/opentype \
      font/otf \
      font/ttf \
      image/bmp \
      image/svg+xml \
      image/vnd.microsoft.icon \
      image/x-icon \
      text/cache-manifest \
      text/css \
      text/html \
      text/javascript \
      text/plain \
      text/vcard \
      text/vnd.rim.location.xloc \
      text/vtt \
      text/x-component \
      text/x-cross-domain-policy \
      text/xml
  </IfModule>

  <IfModule mod_mime.c>
    AddEncoding gzip svgz
  </IfModule>
</IfModule>

### End: Compression ###



### Begin: Browser caching of resource files ###

# This affects Frontend and Backend and increases performance.
<IfModule mod_expires.c>

  ExpiresActive on
  ExpiresDefault                                      "access plus 1 month"

  ExpiresByType text/css                              "access plus 1 year"

  ExpiresByType application/json                      "access plus 0 seconds"
  ExpiresByType application/ld+json                   "access plus 0 seconds"
  ExpiresByType application/schema+json               "access plus 0 seconds"
  ExpiresByType application/vnd.geo+json              "access plus 0 seconds"
  ExpiresByType application/geo+json                  "access plus 0 seconds"
  ExpiresByType application/xml                       "access plus 0 seconds"
  ExpiresByType text/xml                              "access plus 0 seconds"

  ExpiresByType image/vnd.microsoft.icon              "access plus 1 week"
  ExpiresByType image/x-icon                          "access plus 1 week"

  ExpiresByType text/x-component                      "access plus 1 month"

  ExpiresByType text/html                             "access plus 0 seconds"

  ExpiresByType application/javascript                "access plus 1 year"
  ExpiresByType application/x-javascript              "access plus 1 year"
  ExpiresByType text/javascript                       "access plus 1 year"

  ExpiresByType application/manifest+json             "access plus 1 week"
  ExpiresByType application/x-web-app-manifest+json   "access plus 0 seconds"
  ExpiresByType text/cache-manifest                   "access plus 0 seconds"

  ExpiresByType audio/ogg                             "access plus 1 month"
  ExpiresByType image/apng                            "access plus 1 month"
  ExpiresByType image/avif                            "access plus 1 month"
  ExpiresByType image/avif-sequence                   "access plus 1 month"
  ExpiresByType image/bmp                             "access plus 1 year"
  ExpiresByType image/gif                             "access plus 1 year"
  ExpiresByType image/jpeg                            "access plus 1 year"
  ExpiresByType image/jxl                             "access plus 1 month"
  ExpiresByType image/png                             "access plus 1 year"
  ExpiresByType image/svg+xml                         "access plus 1 month"
  ExpiresByType image/webp                            "access plus 1 month"
  ExpiresByType video/mp4                             "access plus 1 month"
  ExpiresByType video/ogg                             "access plus 1 month"
  ExpiresByType video/webm                            "access plus 1 month"

  ExpiresByType application/atom+xml                  "access plus 1 hour"
  ExpiresByType application/rdf+xml                   "access plus 1 hour"
  ExpiresByType application/rss+xml                   "access plus 1 hour"

  ExpiresByType font/collection                       "access plus 1 month"
  ExpiresByType application/vnd.ms-fontobject         "access plus 1 month"
  ExpiresByType font/eot                              "access plus 1 month"
  ExpiresByType font/opentype                         "access plus 1 month"
  ExpiresByType font/otf                              "access plus 1 month"
  ExpiresByType application/x-font-ttf                "access plus 1 month"
  ExpiresByType font/ttf                              "access plus 1 month"
  ExpiresByType application/font-woff                 "access plus 1 month"
  ExpiresByType application/x-font-woff               "access plus 1 month"
  ExpiresByType font/woff                             "access plus 1 month"
  ExpiresByType application/font-woff2                "access plus 1 month"
  ExpiresByType font/woff2                            "access plus 1 month"

  ExpiresByType text/x-cross-domain-policy            "access plus 1 week"

</IfModule>

### End: Browser caching of resource files ###


### Begin: MIME types ###

# Proper MIME types for all files
<IfModule mod_mime.c>
  # Security configuration
  RemoveType .html .htm
  <FilesMatch ".+\.html?$">
    AddType text/html .html .htm
  </FilesMatch>

  RemoveType .svg .svgz
  <FilesMatch ".+\.svgz?$">
    AddType image/svg+xml .svg .svgz
  </FilesMatch>

  # Data interchange
  AddType application/atom+xml                        atom
  AddType application/json                            json map topojson
  AddType application/ld+json                         jsonld
  AddType application/rss+xml                         rss
  AddType application/vnd.geo+json                    geojson
  AddType application/xml                             rdf xml

  # JavaScript
  AddType application/javascript                      js

  # Manifest files
  AddType application/manifest+json                   webmanifest
  AddType application/x-web-app-manifest+json         webapp
  AddType text/cache-manifest                         appcache

  # Media files

  AddType audio/mp4                                   f4a f4b m4a
  AddType audio/ogg                                   oga ogg opus
  AddType image/avif                                  avif
  AddType image/avif-sequence                         avifs
  AddType image/bmp                                   bmp
  AddType image/jxl                                   jxl
  AddType image/webp                                  webp
  AddType video/mp4                                   f4v f4p m4v mp4
  AddType video/ogg                                   ogv
  AddType video/webm                                  webm
  AddType video/x-flv                                 flv
  AddType image/x-icon                                cur ico

  # Web fonts
  AddType font/woff                                   woff
  AddType font/woff2                                  woff2
  AddType application/vnd.ms-fontobject               eot
  AddType font/ttf                                    ttc ttf
  AddType font/otf                                    otf

  # Other
  AddType application/octet-stream                    safariextz
  AddType application/x-bb-appworld                   bbaw
  AddType application/x-chrome-extension              crx
  AddType application/x-opera-extension               oex
  AddType application/x-xpinstall                     xpi
  AddType text/vcard                                  vcard vcf
  AddType text/vnd.rim.location.xloc                  xloc
  AddType text/vtt                                    vtt
  AddType text/x-component                            htc

</IfModule>

# UTF-8 encoding
AddDefaultCharset utf-8
<IfModule mod_mime.c>
  AddCharset utf-8 .atom .css .js .json .manifest .rdf .rss .vtt .webapp .webmanifest .xml
</IfModule>

### End: MIME types ###



### Begin: Cross Origin ###

# Send the CORS header for images when browsers request it.
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    <FilesMatch "\.(bmp|cur|gif|ico|jpe?g|png|svgz?|webp)$">
      SetEnvIf Origin ":" IS_CORS
      Header set Access-Control-Allow-Origin "*" env=IS_CORS
    </FilesMatch>
  </IfModule>
</IfModule>

# Allow cross-origin access to web fonts.
<IfModule mod_headers.c>
  <FilesMatch "\.(eot|otf|tt[cf]|woff2?)$">
    Header set Access-Control-Allow-Origin "*"
  </FilesMatch>
</IfModule>

### End: Cross Origin ###

### Begin: StaticFileCache (preparation) ####

# Document root configuration
RewriteRule .* - [E=SFC_ROOT:%{DOCUMENT_ROOT}]
# RewriteRule .* - [E=SFC_ROOT:%{DOCUMENT_ROOT}/t3site] # Example if your installation is installed in a directory
# NOTE: There are cases (apache versions and configuration) where DOCUMENT_ROOT do not exists. Please set the SFC_ROOT to the right directory without DOCUMENT_ROOT then!

# Cleanup URI
RewriteCond %{REQUEST_URI} ^.*$
RewriteRule .* - [E=SFC_URI:/%{REQUEST_URI}]
RewriteCond %{REQUEST_URI} ^/.*$
RewriteRule .* - [E=SFC_URI:%{REQUEST_URI}]
RewriteCond %{REQUEST_URI} ^/?$
RewriteRule .* - [E=SFC_URI:/]

# Cleanup HOST
RewriteCond %{HTTP_HOST} ^([^:]+)(:[0-9]+)?$
RewriteRule .* - [E=SFC_HOST:%1]

# Disable cache for EXT:solr indexing requests
RewriteCond %{HTTP:X-Tx-Solr-Iq} .+
RewriteRule .* - [E=SFC_HOST:invalid-host]

# Get scheme
RewriteRule .* - [E=SFC_PROTOCOL:http]
RewriteCond %{SERVER_PORT} ^443$ [OR]
RewriteCond %{HTTP:X-Forwarded-Proto} https
RewriteRule .* - [E=SFC_PROTOCOL:https]

# Get port
RewriteRule .* - [E=SFC_PORT:80]
RewriteCond %{ENV:SFC_PROTOCOL} ^https$ [NC]
RewriteRule .* - [E=SFC_PORT:443]
RewriteCond %{SERVER_PORT} ^[0-9]+$
RewriteRule .* - [E=SFC_PORT:%{SERVER_PORT}]
RewriteCond %{HTTP:X-Forwarded-Port} ^[0-9]+$
RewriteRule .* - [E=SFC_PORT:%{HTTP:X-Forwarded-Port}]

# Full path for redirect
RewriteRule .* - [E=SFC_FULLPATH:typo3temp/tx_staticfilecache/%{ENV:SFC_PROTOCOL}_%{ENV:SFC_HOST}_%{ENV:SFC_PORT}%{ENV:SFC_URI}/index]

# Extension (Order: br, gzip, default)
RewriteRule .* - [E=SFC_EXT:]
RewriteCond %{HTTP:Accept-Encoding} br [NC]
RewriteRule .* - [E=SFC_EXT:.br]
RewriteCond %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH}%{ENV:SFC_EXT} !-f
RewriteRule .* - [E=SFC_EXT:]
RewriteCond %{ENV:SFC_EXT} ^$
RewriteCond %{HTTP:Accept-Encoding} gzip [NC]
RewriteRule .* - [E=SFC_EXT:.gz]
RewriteCond %{ENV:SFC_EXT} ^\.gz$
RewriteCond %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH}%{ENV:SFC_EXT} !-f
RewriteRule .* - [E=SFC_EXT:]

# Write Extension to SFC_FULLPATH
RewriteRule .* - [E=SFC_FULLPATH:%{ENV:SFC_FULLPATH}%{ENV:SFC_EXT}]

### Begin: StaticFileCache (main) ####

# We only redirect URI's without query strings
RewriteCond %{QUERY_STRING} ^$

# It only makes sense to do the other checks if a static file actually exists.
RewriteCond %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH} -f

# NO frontend or backend user is logged in. Logged in users may see different
# information than anonymous users. But the anonymous version is cached. So
# don't show the anonymous version to logged in users.
RewriteCond %{HTTP_COOKIE} !staticfilecache [NC]

# We only redirect GET requests
RewriteCond %{REQUEST_METHOD} GET

# Rewrite the request to the static file.
RewriteRule .* %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH} [L]

# Do not allow direct call the cache entries
RewriteCond %{ENV:SFC_URI} ^/typo3temp/tx_staticfilecache/.*
RewriteCond %{ENV:REDIRECT_STATUS} ^$
RewriteRule .* - [F,L]

# Handle application cache
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-l
RewriteRule ^.*\.sfc$ %{ENV:CWD}index.php?eID=sfc_manifest [QSA,L]

### Begin: StaticFileCache (options) ####

# Set proper content type and encoding for gzipped html.
<FilesMatch "\.gzip$">
  SetEnv no-gzip 1
  SetEnv no-brotli 1
  <IfModule mod_headers.c>
     Header set Content-Encoding gzip
  </IfModule>
</FilesMatch>
<FilesMatch "\.gz$">
  SetEnv no-gzip 1
  SetEnv no-brotli 1
  <IfModule mod_headers.c>
     Header set Content-Encoding gzip
  </IfModule>
</FilesMatch>
<FilesMatch "\.br$">
  SetEnv no-gzip 1
  SetEnv no-brotli 1
  <IfModule mod_headers.c>
     Header set Content-Encoding br
  </IfModule>
</FilesMatch>

# if there are same problems with ForceType, please try the AddType alternative
# Set proper content type gzipped html
<FilesMatch "\.gzip$">
  ForceType text/html
  # AddType "text/html" .gzip
</FilesMatch>
<FilesMatch "\.js\.gzip$">
  ForceType text/javascript
  # AddType "text/javascript" .gzip
</FilesMatch>
<FilesMatch "\.css\.gzip$">
  ForceType text/css
  # AddType "text/css" .gzip
</FilesMatch>
<FilesMatch "\.xml\.gzip$">
  ForceType text/xml
  # AddType "text/xml" .gzip
</FilesMatch>
<FilesMatch "\.rss\.gzip$">
  ForceType text/xml
  # AddType "text/xml" .gzip
</FilesMatch>
<FilesMatch "\.gz$">
  ForceType text/html
  # AddType "text/html" .gz
</FilesMatch>
<FilesMatch "\.xml\.gz$">
  ForceType text/xml
  # AddType "text/xml" .gz
</FilesMatch>
<FilesMatch "\.rss\.gz$">
  ForceType text/xml
  # AddType "text/xml" .gz
</FilesMatch>
<FilesMatch "\.br$">
  ForceType text/html
  # AddType "text/html" .br
</FilesMatch>
<FilesMatch "\.xml\.br$">
  ForceType text/xml
  # AddType "text/xml" .br
</FilesMatch>
<FilesMatch "\.rss\.br$">
  ForceType text/xml
  # AddType "text/xml" .br
</FilesMatch>

# Avoid .br files being delivered with Content-Language: br headers
<IfModule mod_mime.c>
  RemoveLanguage .br
</IfModule>

### End: StaticFileCache ###


### Begin: Rewriting and Access ###

# You need rewriting, if you use a URL-Rewriting extension (RealURL, CoolUri).

<IfModule mod_rewrite.c>

  # Enable URL rewriting
  RewriteEngine On

  # Store the current location in an environment variable CWD to use
  # mod_rewrite in .htaccess files without knowing the RewriteBase
  RewriteCond $0#%{REQUEST_URI} ([^#]*)#(.*)\1$
  RewriteRule ^.*$ - [E=CWD:%2]

  # Rules to set ApplicationContext based on hostname
  #RewriteCond %{HTTP_HOST} ^dev\.example\.com$
  #RewriteRule .? - [E=TYPO3_CONTEXT:Development]
  #RewriteCond %{HTTP_HOST} ^staging\.example\.com$
  #RewriteRule .? - [E=TYPO3_CONTEXT:Production/Staging]
  #RewriteCond %{HTTP_HOST} ^www\.example\.com$
  #RewriteRule .? - [E=TYPO3_CONTEXT:Production]

  # Rule for versioned static files, configured through:
  # - $GLOBALS['TYPO3_CONF_VARS']['BE']['versionNumberInFilename']
  # - $GLOBALS['TYPO3_CONF_VARS']['FE']['versionNumberInFilename']
  # IMPORTANT: This rule has to be the very first RewriteCond in order to work!
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule ^(.+)\.(\d+)\.(php|js|css|png|jpg|gif|gzip)$ %{ENV:CWD}$1.$3 [L]

  # Access block for folders
  RewriteRule _(?:recycler|temp)_/ - [F]
  RewriteRule fileadmin/templates/.*\.(?:txt|ts)$ - [F]
  RewriteRule ^(?:vendor|typo3_src|typo3temp/var) - [F]
  RewriteRule (?:typo3conf/ext|typo3/sysext|typo3/ext)/[^/]+/(?:Configuration|Resources/Private|Tests?|Documentation|docs?)/ - [F]

  # Block access to all hidden files and directories with the exception of
  # the visible content from within the `/.well-known/` hidden directory (RFC 5785).
  RewriteCond %{REQUEST_URI} "!(^|/)\.well-known/([^./]+./?)+$" [NC]
  RewriteCond %{SCRIPT_FILENAME} -d [OR]
  RewriteCond %{SCRIPT_FILENAME} -f
  RewriteRule (?:^|/)\. - [F]

  # Stop rewrite processing, if we are in any other known directory
  # NOTE: Add your additional local storages here
  RewriteRule ^(?:fileadmin/|typo3conf/|typo3temp/|uploads/) - [L]

  # If the file/symlink/directory does not exist but is below /typo3/, redirect to the TYPO3 Backend entry point.
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_FILENAME} !-l
  RewriteRule ^typo3/(.*)$ %{ENV:CWD}typo3/index.php [QSA,L]

  # If the file/symlink/directory does not exist => Redirect to index.php.
  # For httpd.conf, you need to prefix each '%{REQUEST_FILENAME}' with '%{DOCUMENT_ROOT}'.
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_FILENAME} !-l
  RewriteRule ^.*$ %{ENV:CWD}index.php [QSA,L]

</IfModule>

# Access block for files
# Apache < 2.3
<IfModule !mod_authz_core.c>
  <FilesMatch "(?i:^\.|^#.*#|^(?:ChangeLog|ToDo|Readme|License)(?:\.md|\.txt)?|^composer\.(?:json|lock)|^ext_conf_template\.txt|^ext_typoscript_constants\.txt|^ext_typoscript_setup\.txt|flexform[^.]*\.xml|locallang[^.]*\.(?:xml|xlf)|\.(?:bak|co?nf|cfg|ya?ml|ts|typoscript|tsconfig|dist|fla|in[ci]|log|sh|sql(?:\..*)?|sqlite(?:\..*)?|sw[op]|git.*|rc)|.*~)$">
    Order allow,deny
    Deny from all
    Satisfy All
  </FilesMatch>
</IfModule>
# Apache ≥ 2.3
<IfModule mod_authz_core.c>
  <If "%{REQUEST_URI} =~ m#(?i:/\.|/\x23.*\x23|/(?:ChangeLog|ToDo|Readme|License)(?:\.md|\.txt)?|/composer\.(?:json|lock)|/ext_conf_template\.txt|/ext_typoscript_constants\.txt|/ext_typoscript_setup\.txt|flexform[^.]*\.xml|locallang[^.]*\.(?:xml|xlf)|\.(?:bak|co?nf|cfg|ya?ml|ts|typoscript|tsconfig|dist|fla|in[ci]|log|sh|sql(?:\..*)?|sqlite(?:\..*)?|sw[op]|git.*|rc)|.*~)$#">
    Require all denied
  </If>
</IfModule>

# Block access to vcs directories
<IfModule mod_alias.c>
  RedirectMatch 404 /\.(?:git|svn|hg)/
</IfModule>

### End: Rewriting and Access ###



### Begin: Miscellaneous ###

# 404 error prevention for non-existing redirected folders
Options -MultiViews

# Make sure that directory listings are disabled.
<IfModule mod_autoindex.c>
  Options -Indexes
</IfModule>

<IfModule mod_headers.c>
  # Force IE to render pages in the highest available mode
  Header set X-UA-Compatible "IE=edge"
  <FilesMatch "\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svgz?|ttf|vcf|webapp|webm|webp|woff2?|xml|xpi)$">
    Header unset X-UA-Compatible
  </FilesMatch>

  # Reducing MIME type security risks
  Header set X-Content-Type-Options "nosniff"
</IfModule>

# ETag removal
<IfModule mod_headers.c>
  Header unset ETag
</IfModule>
FileETag None

### End: Miscellaneous ###


# Add your own rules here.
